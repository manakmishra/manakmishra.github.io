import React, { useRef } from 'react'
import {
  Button,
  Flex,
  Box,
  useDisclosure,
  Drawer,
  DrawerOverlay,
  DrawerContent,
  DrawerCloseButton,
  DrawerHeader,
  DrawerBody,
  Stack,
  Icon,
  useColorMode,
} from '@chakra-ui/react'
import NextLink from 'next/link'
import useMediaQuery from '../utils/hook/useMediaQuery'
import { AiOutlineMenu } from 'react-icons/ai'
import DarkModeToggle from './DarkModeToggle'

const NavBar: React.FC = () => {
  const isLargerThan768 = useMediaQuery(768)
  const { isOpen, onOpen, onClose } = useDisclosure()
  const firstField = useRef()

  const { colorMode } = useColorMode();

  const color = {
    light: '#383A42',
    dark: '#DCDFE4'
  }

  const bgColor = {
      light: '#FAFAFA',
      dark: '#282C34'
  }
  
  const NavbarDrawer: React.FC = () => (
    <>
      <Drawer
        isOpen={isOpen}
        placement="right"
        initialFocusRef={firstField.current}
        onClose={onClose}
      >
        <DrawerOverlay />
        <DrawerContent backgroundColor="secondary">
          <DrawerCloseButton />
          <DrawerHeader borderBottomWidth="1px">
            <Box>
                <NextLink href="/" passHref>
                    <Button as="a" variant="ghost" _hover={{}}>
                        <svg width="53" height="43" viewBox="0 0 461 378" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M130.032 44.376V63.384C123.024 63.384 116.64 64.104 110.88 65.544C105.216 66.888 100.8 69.24 97.632 72.6C94.464 75.96 93.168 80.568 93.744 86.424L99.792 145.464C101.04 157.56 99.312 166.584 94.608 172.536C90 178.488 82.752 182.376 72.864 184.2C82.944 186.024 90.288 189.768 94.896 195.432C99.504 201 101.136 210.168 99.792 222.936L93.744 281.976C93.168 287.928 94.464 292.584 97.632 295.944C100.8 299.304 105.216 301.656 110.88 303C116.544 304.344 122.928 305.016 130.032 305.016V324.024C119.28 324.024 109.2 322.728 99.792 320.136C90.384 317.544 82.992 312.984 77.616 306.456C72.24 300.024 70.224 290.904 71.568 279.096L77.328 224.376C78.096 217.848 77.472 212.328 75.456 207.816C73.536 203.208 69.312 199.752 62.784 197.448C56.352 195.048 46.704 193.848 33.84 193.848V174.552C46.704 174.552 56.352 173.4 62.784 171.096C69.312 168.792 73.536 165.384 75.456 160.872C77.472 156.36 78.096 150.84 77.328 144.312L71.568 89.304C70.32 77.496 72.336 68.376 77.616 61.944C82.992 55.416 90.384 50.856 99.792 48.264C109.2 45.672 119.28 44.376 130.032 44.376ZM272.768 130.2C277.568 130.2 282.224 131.256 286.736 133.368C291.248 135.48 294.944 139.56 297.823 145.608C300.704 151.656 302.144 160.488 302.144 172.104V285H279.679V175.992C279.679 166.488 279.104 159.624 277.952 155.4C276.8 151.176 273.488 149.064 268.016 149.064C263.504 149.064 258.992 150.504 254.479 153.384C249.967 156.168 245.648 160.776 241.52 167.208V285H218.912V175.992C218.912 166.488 218.335 159.624 217.183 155.4C216.031 151.176 212.719 149.064 207.248 149.064C202.544 149.064 197.984 150.504 193.568 153.384C189.152 156.168 184.879 160.776 180.751 167.208V285H158.431V133.368H177.439L178.879 150.936C183.007 145.08 187.615 140.184 192.703 136.248C197.887 132.216 204.271 130.2 211.856 130.2C217.615 130.2 223.039 131.592 228.128 134.376C233.215 137.064 236.96 142.344 239.36 150.216C243.488 144.264 248.144 139.464 253.328 135.816C258.512 132.072 264.991 130.2 272.768 130.2ZM330.543 44.376C341.295 44.376 351.375 45.672 360.783 48.264C370.191 50.856 377.583 55.416 382.959 61.944C388.335 68.376 390.351 77.496 389.007 89.304L383.247 144.312C382.191 154.104 384.735 161.592 390.879 166.776C397.023 171.96 408.975 174.552 426.735 174.552V193.848C409.071 193.848 397.119 196.488 390.879 201.768C384.735 207.048 382.191 214.584 383.247 224.376L389.007 279.096C390.255 290.904 388.191 300.024 382.815 306.456C377.535 312.984 370.191 317.544 360.783 320.136C351.375 322.728 341.295 324.024 330.543 324.024V305.016C337.551 305.016 343.887 304.344 349.551 303C355.311 301.656 359.775 299.304 362.943 295.944C366.111 292.584 367.407 287.928 366.831 281.976L360.783 222.936C359.439 210.168 361.167 201 365.967 195.432C370.863 189.864 379.167 186.216 390.879 184.488C379.551 182.568 371.391 178.632 366.399 172.68C361.407 166.632 359.535 157.56 360.783 145.464L366.831 86.424C367.407 80.568 366.111 75.96 362.943 72.6C359.775 69.24 355.359 66.888 349.695 65.544C344.031 64.104 337.647 63.384 330.543 63.384V44.376Z" fill="foreground.light"/>
                        </svg>
                    </Button>
                </NextLink>
            </Box>
          </DrawerHeader>

          <DrawerBody>
            <Stack spacing="24px">
              <NextLink href="/" passHref>
                <Button as="a" variant="ghost" textStyle="hfLabel">
                  Home
                </Button>
              </NextLink>
              <NextLink href="/projects" passHref>
                <Button as="a" variant="ghost" fontSize="16px">
                  Projects
                </Button>
              </NextLink>
              <NextLink href="/blog" passHref>
                <Button as="a" variant="ghost" fontSize="16px">
                  Blog
                </Button>
              </NextLink>
            </Stack>
          </DrawerBody>
        </DrawerContent>
      </Drawer>
    </>
  )

  return (
    <Box zIndex="99">
        <Flex
            as="nav"
            flexDirection="row"
            justifyContent="space-between"
            alignItems="center"
            width="100%"
            px="3vw"
            py="3"
            background={bgColor[colorMode]}
        >
            <NextLink href="/" passHref>
                <Button as="a" variant="unstyled">
                    <svg width="53" height="43" viewBox="0 0 461 378" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M130.032 44.376V63.384C123.024 63.384 116.64 64.104 110.88 65.544C105.216 66.888 100.8 69.24 97.632 72.6C94.464 75.96 93.168 80.568 93.744 86.424L99.792 145.464C101.04 157.56 99.312 166.584 94.608 172.536C90 178.488 82.752 182.376 72.864 184.2C82.944 186.024 90.288 189.768 94.896 195.432C99.504 201 101.136 210.168 99.792 222.936L93.744 281.976C93.168 287.928 94.464 292.584 97.632 295.944C100.8 299.304 105.216 301.656 110.88 303C116.544 304.344 122.928 305.016 130.032 305.016V324.024C119.28 324.024 109.2 322.728 99.792 320.136C90.384 317.544 82.992 312.984 77.616 306.456C72.24 300.024 70.224 290.904 71.568 279.096L77.328 224.376C78.096 217.848 77.472 212.328 75.456 207.816C73.536 203.208 69.312 199.752 62.784 197.448C56.352 195.048 46.704 193.848 33.84 193.848V174.552C46.704 174.552 56.352 173.4 62.784 171.096C69.312 168.792 73.536 165.384 75.456 160.872C77.472 156.36 78.096 150.84 77.328 144.312L71.568 89.304C70.32 77.496 72.336 68.376 77.616 61.944C82.992 55.416 90.384 50.856 99.792 48.264C109.2 45.672 119.28 44.376 130.032 44.376ZM272.768 130.2C277.568 130.2 282.224 131.256 286.736 133.368C291.248 135.48 294.944 139.56 297.823 145.608C300.704 151.656 302.144 160.488 302.144 172.104V285H279.679V175.992C279.679 166.488 279.104 159.624 277.952 155.4C276.8 151.176 273.488 149.064 268.016 149.064C263.504 149.064 258.992 150.504 254.479 153.384C249.967 156.168 245.648 160.776 241.52 167.208V285H218.912V175.992C218.912 166.488 218.335 159.624 217.183 155.4C216.031 151.176 212.719 149.064 207.248 149.064C202.544 149.064 197.984 150.504 193.568 153.384C189.152 156.168 184.879 160.776 180.751 167.208V285H158.431V133.368H177.439L178.879 150.936C183.007 145.08 187.615 140.184 192.703 136.248C197.887 132.216 204.271 130.2 211.856 130.2C217.615 130.2 223.039 131.592 228.128 134.376C233.215 137.064 236.96 142.344 239.36 150.216C243.488 144.264 248.144 139.464 253.328 135.816C258.512 132.072 264.991 130.2 272.768 130.2ZM330.543 44.376C341.295 44.376 351.375 45.672 360.783 48.264C370.191 50.856 377.583 55.416 382.959 61.944C388.335 68.376 390.351 77.496 389.007 89.304L383.247 144.312C382.191 154.104 384.735 161.592 390.879 166.776C397.023 171.96 408.975 174.552 426.735 174.552V193.848C409.071 193.848 397.119 196.488 390.879 201.768C384.735 207.048 382.191 214.584 383.247 224.376L389.007 279.096C390.255 290.904 388.191 300.024 382.815 306.456C377.535 312.984 370.191 317.544 360.783 320.136C351.375 322.728 341.295 324.024 330.543 324.024V305.016C337.551 305.016 343.887 304.344 349.551 303C355.311 301.656 359.775 299.304 362.943 295.944C366.111 292.584 367.407 287.928 366.831 281.976L360.783 222.936C359.439 210.168 361.167 201 365.967 195.432C370.863 189.864 379.167 186.216 390.879 184.488C379.551 182.568 371.391 178.632 366.399 172.68C361.407 166.632 359.535 157.56 360.783 145.464L366.831 86.424C367.407 80.568 366.111 75.96 362.943 72.6C359.775 69.24 355.359 66.888 349.695 65.544C344.031 64.104 337.647 63.384 330.543 63.384V44.376Z" fill={color[colorMode]}/>
                    </svg>
                </Button>
            </NextLink>
            {isLargerThan768 ? (
            <Box color="currentColor">
                <NextLink href="/" passHref>
                    <Button as="a" variant="ghost" px={2} mx="1.5vw">
                        projects
                    </Button>
                </NextLink>
                <NextLink href="/projects" passHref>
                    <Button as="a" variant="ghost" px={2} mx="1.5vw">
                        resume
                    </Button>
                </NextLink>
                <NextLink href="/blog" passHref>
                    <Button as="a" variant="ghost" px={2} mx="1.5vw">
                        about
                    </Button>
                </NextLink>{' '}
            </Box>
            ) : (
            <Icon as={AiOutlineMenu} w={7} h={7} onClick={onOpen} />
            )}
            <DarkModeToggle />
        </Flex>
        <NavbarDrawer />
    </Box>
  )
}

export default NavBar;